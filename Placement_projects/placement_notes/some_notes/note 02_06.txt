functions to report the current Git branch name as used in the PS1

function git-branch-name {

  git symbolic-ref HEAD 2>/dev/null | cut -d"/" -f 3

}

 

function git-branch-prompt {

  local branch=`git-branch-name`

  if [ $branch ]; then printf "[%s]" $branch; fi

}



def read_controller_port(controller_log):
        """
        Finds the port that the Controller is listening on, based on reading the specified log file on the remote.
        The log file might not contain the port number when this is first called, so we try re-reading the file for up to 10 seconds.

        :param controller_log: Absolute path to the controller's log.
        :returns: The port number as an integer if found, or None otherwise.
        """
        output = StreamingTestCase.run_command(["docker", "exec", "local_env_remote-machine_1", "cat", controller_log])
        
        port = None
        for line in output:
            match = ctrl_port_pattern.match(line)
            if match is not None:
                port = match.group(1)
                print(f"Match: {port}")
                break

        return port
		
		ctrl_port_pattern = re.compile(".* Streaming server listening on port (\\d+)$")
		-----------------------------
		
		# Create a file in the working directory of the ground system with some content
docker exec -d -u ground-user local_env_ground-machine_1 sh -c "echo hello > /tmp/working-dir/hello.txt"

# Start the controller with a job that:
#   Causes the file to be uploaded
#    Copies the file outside of the mountpoint
docker exec -d -u remote-user local_env_remote-machine_1 \
sh -c '/cloudflow-bin/cloud-flow-ctrl-poc --mountpoint /tmp/mountpoint --job "cp hello.txt /tmp" > /tmp/cloudflow-ctrl.log'

 

# Start the CLI
#  The controller & CLI will now exit and the mountpoint should go away
docker exec -u ground-user local_env_ground-machine_1 \
sh -c '/cloudflow-bin/cloudflow-cli-poc engineering-mode stream --server-address remote --server-port 50051 --working-dir /tmp/working-dir > /tmp/cloudflow-cli.log'

 

# Assert that the file outside of the mountpoint is as expected (docker exec something on the remote)
output = docker exec -d -u remote-user local_env_remote-machine_1 cat /tmp/hello.txt
assert output ==

----------------------------------------------

